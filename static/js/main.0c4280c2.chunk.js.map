{"version":3,"sources":["components/AppBar/Component.js","components/slate/utilities.js","components/slate/marks.js","components/Button/Component.js","components/ContentCreator/Component.js","components/App/Component.js","index.js"],"names":["AppBar","_ref","projectTitle","action","react_default","a","createElement","className","packageJson","name","href","homepage","version","MarkHotkey","options","type","key","onKeyDown","event","editor","next","ctrlKey","preventDefault","toggleMark","CodeMark","children","BoldMark","_ref2","ItalicMark","_ref3","UnderlineMark","_ref4","StrikethroughMark","_ref5","Button","classes","label","disabled","value","concat","onClick","ContentCreator","state","editors","id","shortId","generate","Value","fromJSON","initialValue","handleAddingEditor","e","_this","setState","prevState","Object","toConsumableArray","handleRemovingEditor","editorId","target","alert","filter","handleChange","props","mappedEditors","map","objectSpread","contentChange","handleKeyDown","isCode","blocks","some","block","setBlocks","renderMark","mark","marks_CodeMark","marks_BoldMark","marks_ItalicMark","marks_UnderlineMark","marks_StrikethroughMark","onDragStart","index","draggedItem","dataTransfer","effectAllowed","setData","parentNode","setDragImage","onDragOver","draggedOverItem","item","splice","_this2","this","Fragment","components_Button_Component","idx","draggable","onDragEnd","slate_react_es","plugins","placeholder","onChange","change","React","Component","App","editorsState","components_ContentCreator_Component","fields","components_AppBar_Component","ReactDOM","render","App_Component","document","getElementById"],"mappings":"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","file":"static/js/main.0c4280c2.chunk.js","sourcesContent":["import React from \"react\";\nimport packageJson from \"../../../package.json\";\n\nconst AppBar = ({ projectTitle, action }) => (\n  <div className=\"appBar\">\n    <ul className=\"flex m-0\">\n      <li className=\"appBar-details\">\n        <strong>Prototype name: </strong>\n        <span className=\"appBar-detail\">{packageJson.name}</span>\n      </li>\n      <li className=\"ml-1 appBar-details\">\n        <strong>Homepage: </strong>\n        <a className=\"appBar-detail\" href={packageJson.homepage}>\n          {packageJson.homepage}\n        </a>\n      </li>\n    </ul>\n\n    <div className=\"appBar-details\">\n      <strong>Version: </strong>\n      <span className=\"appBar-detail\">{packageJson.version}</span>\n    </div>\n  </div>\n);\n\nexport default AppBar;\n","export const MarkHotkey = (options) => {\n  const { type, key } = options;\n\n  // Return our \"plugin\" object, container the `onKeyDown` handler.\n  return {\n    onKeyDown(event, editor, next) {\n      // If it doesn't match our `key`, let other plugins handle it.\n      if (!event.ctrlKey || event.key !== key) return next();\n\n      // Prevent the default chars from being inserted.\n      event.preventDefault();\n\n      // Toggle the mark `type`.\n      editor.toggleMark(type);\n    },\n  };\n};\n","import React from \"react\";\n\nexport const CodeMark = ({ children }) => <code>{children}</code>;\nexport const BoldMark = ({ children }) => <strong>{children}</strong>;\nexport const ItalicMark = ({ children }) => <em>{children}</em>;\nexport const UnderlineMark = ({ children }) => <u>{children}</u>;\nexport const StrikethroughMark = ({ children }) => <del>{children}</del>;\n","import React from \"react\";\n\nconst Button = ({ classes, action, label, disabled, value }) => (\n  <button className={`btn ${classes}`} onClick={action} disabled={disabled} value={value}>\n    {label}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport shortId from \"shortid\";\nimport initialValue from \"../slate/initial-value.json\";\nimport { MarkHotkey } from \"../slate/utilities\";\nimport { CodeMark, BoldMark, ItalicMark, UnderlineMark, StrikethroughMark } from \"../slate/marks\";\nimport Button from \"../Button\";\n\nclass ContentCreator extends React.Component {\n  state = {\n    editors: [\n      {\n        id: shortId.generate(),\n        value: Value.fromJSON(initialValue),\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button label=\"Add unit\" classes=\"addEditorBtn mb-2\" action={this.handleAddingEditor} />\n        <div className=\"editorsContainer\">\n          {this.state.editors.map((editor, idx) => (\n            <div\n              className=\"editorContainer\"\n              key={editor.id}\n              onDragOver={() => this.onDragOver(idx)}>\n              <div\n                className=\"editorDragHandle\"\n                draggable={true}\n                onDragStart={(e) => this.onDragStart(e, idx)}\n                onDragEnd={this.onDragEnd}\n              />\n              <div className=\"editorInternal\">\n                <Editor\n                  value={editor.value}\n                  plugins={[\n                    MarkHotkey({ type: \"bold\", key: \"b\" }),\n                    MarkHotkey({ type: \"italic\", key: \"i\" }),\n                    MarkHotkey({ type: \"underline\", key: \"u\" }),\n                    MarkHotkey({ type: \"strikethrough\", key: \"s\" }),\n                    MarkHotkey({ type: \"code\", key: \"`\" }),\n                  ]}\n                  placeholder={\"Type something...\"}\n                  onChange={(change, id) => this.handleChange(change, editor.id)}\n                  renderMark={this.renderMark}\n                />\n\n                <div className=\"editorContainerMeta flex\">\n                  <div />\n                  <div className=\"editorContainerMetaActions\">\n                    <Button\n                      label=\"Add unit\"\n                      classes=\"addEditorBtn metaEditorBtn\"\n                      action={() => alert(`Nested editors will be wired up soon!`)}\n                      disabled\n                    />\n                    <Button\n                      label=\"Remove unit\"\n                      classes=\"removeEditorBtn metaEditorBtn\"\n                      action={this.handleRemovingEditor}\n                      value={editor.id}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  handleAddingEditor = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      editors: [\n        ...prevState.editors,\n        {\n          id: shortId.generate(),\n          value: Value.fromJSON(initialValue),\n        },\n      ],\n    }));\n  };\n\n  handleRemovingEditor = (e) => {\n    e.preventDefault();\n    const { editors } = this.state;\n    const editorId = e.target.value;\n    alert(`Are you sure you want to remove editor ${editorId}?`);\n    this.setState({\n      editors: editors.filter((editor) => editor.id !== editorId),\n    });\n  };\n\n  handleChange = (props, id) => {\n    const mappedEditors = this.state.editors.map((editor) => {\n      if (editor.id === id) {\n        editor = { ...editor, value: props.value };\n      }\n      return editor;\n    });\n\n    this.setState({\n      editors: mappedEditors,\n    });\n\n    this.props.contentChange(this.state.editors);\n  };\n\n  handleKeyDown = (event, editor, next) => {\n    if (!event.ctrlKey) return next();\n    switch (event.key) {\n      case \"b\": {\n        event.preventDefault();\n        editor.toggleMark(\"bold\");\n        break;\n      }\n      case \"i\": {\n        event.preventDefault();\n        editor.toggleMark(\"italic\");\n        break;\n      }\n      case \"`\": {\n        const isCode = editor.value.blocks.some((block) => block.type === \"code\");\n        event.preventDefault();\n        editor.setBlocks(isCode ? \"paragraph\" : \"code\");\n        break;\n      }\n      default: {\n        return next();\n      }\n    }\n  };\n\n  renderMark = (props, editor, next) => {\n    switch (props.mark.type) {\n      case \"code\":\n        return <CodeMark {...props} />;\n      case \"bold\":\n        return <BoldMark {...props} />;\n      case \"italic\":\n        return <ItalicMark {...props} />;\n      case \"underline\":\n        return <UnderlineMark {...props} />;\n      case \"strikethrough\":\n        return <StrikethroughMark {...props} />;\n      default:\n        return next();\n    }\n  };\n\n  onDragStart = (e, index) => {\n    this.draggedItem = this.state.editors[index];\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  };\n\n  onDragOver = (index) => {\n    const draggedOverItem = this.state.editors[index];\n    if (this.draggedItem === draggedOverItem) return;\n    let editors = this.state.editors.filter((item) => item !== this.draggedItem);\n    editors.splice(index, 0, this.draggedItem);\n    this.setState({ editors });\n  };\n}\n\nexport default ContentCreator;\n","import React from \"react\";\nimport AppBar from \"../AppBar\";\nimport ContentCreator from \"../ContentCreator\";\n\nclass App extends React.Component {\n  state = {\n    editorsState: [],\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <ContentCreator contentChange={(fields) => this.contentChange(fields)} />\n        </div>\n\n        <AppBar projectTitle=\"Testing unit creation\" />\n      </div>\n    );\n  }\n\n  contentChange = (editorsState) => {\n    this.setState({ editorsState });\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}