{"version":3,"sources":["components/slate/utilities.js","components/slate/marks.js","components/app/app.js","index.js"],"names":["MarkHotkey","options","type","key","onKeyDown","event","editor","next","ctrlKey","preventDefault","toggleMark","CodeMark","_ref","children","react_default","a","createElement","BoldMark","_ref2","ItalicMark","_ref3","UnderlineMark","_ref4","StrikethroughMark","_ref5","plugins","App","state","editors","handleChange","props","id","mappedEditors","_this","map","Object","objectSpread","value","setState","handleKeyDown","isCode","blocks","some","block","setBlocks","handleAddingEditor","e","prevState","concat","toConsumableArray","shortId","generate","Value","fromJSON","initialValue","handleRemovingEditor","editorId","target","alert","filter","onDragStart","index","draggedItem","dataTransfer","effectAllowed","setData","parentNode","setDragImage","onDragOver","draggedOverItem","item","splice","renderMark","mark","marks_CodeMark","marks_BoldMark","marks_ItalicMark","marks_UnderlineMark","marks_StrikethroughMark","_this2","this","className","onClick","idx","draggable","onDragEnd","slate_react_es","placeholder","onChange","change","disabled","JSON","stringify","React","Component","ReactDOM","render","app_app","document","getElementById"],"mappings":"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","file":"static/js/main.dcdf3d9f.chunk.js","sourcesContent":["export const MarkHotkey = (options) => {\n  const { type, key } = options;\n\n  // Return our \"plugin\" object, container the `onKeyDown` handler.\n  return {\n    onKeyDown(event, editor, next) {\n      // If it doesn't match our `key`, let other plugins handle it.\n      if (!event.ctrlKey || event.key !== key) return next();\n\n      // Prevent the default chars from being inserted.\n      event.preventDefault();\n\n      // Toggle the mark `type`.\n      editor.toggleMark(type);\n    },\n  };\n};\n","import React from \"react\";\n\nexport const CodeMark = ({ children }) => <code>{children}</code>;\nexport const BoldMark = ({ children }) => <strong>{children}</strong>;\nexport const ItalicMark = ({ children }) => <em>{children}</em>;\nexport const UnderlineMark = ({ children }) => <u>{children}</u>;\nexport const StrikethroughMark = ({ children }) => <del>{children}</del>;\n","import React from \"react\";\nimport { Editor } from \"slate-react\";\nimport { Value } from \"slate\";\nimport shortId from \"shortid\";\nimport initialValue from \"../slate/initial-value.json\";\nimport { MarkHotkey } from \"../slate/utilities\";\nimport { CodeMark, BoldMark, ItalicMark, UnderlineMark, StrikethroughMark } from \"../slate/marks\";\n\nconst plugins = [\n  MarkHotkey({ type: \"bold\", key: \"b\" }),\n  MarkHotkey({ type: \"italic\", key: \"i\" }),\n  MarkHotkey({ type: \"underline\", key: \"u\" }),\n  MarkHotkey({ type: \"strikethrough\", key: \"s\" }),\n  MarkHotkey({ type: \"code\", key: \"`\" }),\n];\n\nclass App extends React.Component {\n  state = {\n    editors: [],\n  };\n\n  handleChange = (props, id) => {\n    const mappedEditors = this.state.editors.map((editor) => {\n      if (editor.id === id) {\n        editor = { ...editor, value: props.value };\n      }\n      return editor;\n    });\n\n    this.setState({\n      editors: mappedEditors,\n    });\n  };\n\n  handleKeyDown = (event, editor, next) => {\n    if (!event.ctrlKey) return next();\n    switch (event.key) {\n      case \"b\": {\n        event.preventDefault();\n        editor.toggleMark(\"bold\");\n        break;\n      }\n      case \"i\": {\n        event.preventDefault();\n        editor.toggleMark(\"italic\");\n        break;\n      }\n      case \"`\": {\n        const isCode = editor.value.blocks.some((block) => block.type === \"code\");\n        event.preventDefault();\n        editor.setBlocks(isCode ? \"paragraph\" : \"code\");\n        break;\n      }\n      default: {\n        return next();\n      }\n    }\n  };\n\n  handleAddingEditor = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      editors: [\n        ...prevState.editors,\n        {\n          id: shortId.generate(),\n          value: Value.fromJSON(initialValue),\n        },\n      ],\n    }));\n  };\n\n  handleRemovingEditor = (e) => {\n    e.preventDefault();\n    const { editors } = this.state;\n    const editorId = e.target.value;\n    alert(`Are you sure you want to remove editor ${editorId}?`);\n    this.setState({\n      editors: editors.filter((editor) => editor.id !== editorId),\n    });\n  };\n\n  onDragStart = (e, index) => {\n    this.draggedItem = this.state.editors[index];\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.target.parentNode);\n    e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\n  };\n\n  onDragOver = (index) => {\n    const draggedOverItem = this.state.editors[index];\n\n    // if the item is dragged over itself, ignore\n    if (this.draggedItem === draggedOverItem) {\n      return;\n    }\n\n    // filter out the currently dragged item\n    let editors = this.state.editors.filter((item) => item !== this.draggedItem);\n\n    // add the dragged item after the dragged over item\n    editors.splice(index, 0, this.draggedItem);\n\n    this.setState({ editors });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>Testing: multiple editors</h1>\n\n        <header className=\"header\">\n          <button onClick={this.handleAddingEditor} className=\"btn addEditorBtn\">\n            Add unit\n          </button>\n        </header>\n\n        <div className=\"editorsContainer\">\n          {this.state.editors.map((editor, idx) => (\n            <div\n              key={editor.id}\n              className=\"editorContainer\"\n              onDragOver={() => this.onDragOver(idx)}>\n              <div\n                className=\"editorDragHandle\"\n                draggable={true}\n                onDragStart={(e) => this.onDragStart(e, idx)}\n                onDragEnd={this.onDragEnd}\n              />\n              <div className=\"editorInternal\">\n                <Editor\n                  value={editor.value}\n                  plugins={plugins}\n                  placeholder={\"Get writing...\"}\n                  onChange={(change, id) => this.handleChange(change, editor.id)}\n                  renderMark={this.renderMark}\n                />\n\n                <div className=\"editorContainerMeta flex\">\n                  <div>\n                    <code>editor id: {editor.id}</code>\n                  </div>\n                  <div className=\"editorContainerMetaActions\">\n                    <button\n                      className=\"btn addEditorBtn metaEditorBtn\"\n                      disabled\n                      onClick={() => alert(`Nested editors will be wired up soon!`)}>\n                      Add unit\n                    </button>\n                    <button\n                      onClick={this.handleRemovingEditor}\n                      className=\"btn removeEditorBtn metaEditorBtn\"\n                      value={editor.id}>\n                      Remove unit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <details className=\"detailsComponent\">\n          <summary>\n            <code>application state</code>\n          </summary>\n          <pre>\n            <code>{JSON.stringify(this.state, null, 2)}</code>\n          </pre>\n        </details>\n      </div>\n    );\n  }\n\n  renderMark = (props, editor, next) => {\n    switch (props.mark.type) {\n      case \"code\":\n        return <CodeMark {...props} />;\n      case \"bold\":\n        return <BoldMark {...props} />;\n      case \"italic\":\n        return <ItalicMark {...props} />;\n      case \"underline\":\n        return <UnderlineMark {...props} />;\n      case \"strikethrough\":\n        return <StrikethroughMark {...props} />;\n      default:\n        return next();\n    }\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}